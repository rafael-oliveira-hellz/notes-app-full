{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "NOTES REST API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "notes-app-mvp.herokuapp.com/api/v1",
  "basePath": "/",
  "tags": [
    {
      "name": "User",
      "description": "Endpoints para gerenciamento de usuários"
    },
    {
      "name": "Auth",
      "description": "Endpoints para autenticação e validação de usuários"
    },
    {
      "name": "Note",
      "description": "Endpoints para gerenciamento de anotações"
    }
  ],
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint para criar um novo usuário.",
        "parameters": [
          {
            "name": "signup",
            "in": "body",
            "description": "Dados do novo usuário.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/newUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Usuário criado com sucesso.",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "409": {
            "description": "Usuário já existe.",
            "schema": {
              "$ref": "#/definitions/Conflict"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint para realizar o login de um usuário.",
        "parameters": [
          {
            "name": "signin",
            "in": "body",
            "description": "Dados do usuário para o login.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário logado com sucesso.",
            "schema": {
              "$ref": "#/definitions/UserLoginResponse"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/auth/refresh-token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint para atualizar o token de um usuário.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token para atualização do acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/RefreshToken"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Token atualizado com sucesso.",
            "schema": {
              "$ref": "#/definitions/RefreshTokenResponse"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/auth/verify-user": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint para verificar se o usuário existe.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token para autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário verificado com sucesso.",
            "schema": {
              "$ref": "#/definitions/VerifyUserResponse"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter todos os usuários.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Número da página.",
            "required": false,
            "type": "number"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limite de usuários por página.",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Listar todos os usuários no sistema.",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter o perfil do usuário.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obter perfil do usuário.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para deletar o perfil do usuário.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletar perfil do usuário.",
            "schema": {
              "$ref": "#/definitions/NoContentR"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/find": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter um usuário pelo campo.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "field",
            "in": "query",
            "description": "Campo a ser pesquisado.",
            "required": true,
            "type": "string"
          },
          {
            "name": "value",
            "in": "query",
            "description": "Valor a ser pesquisado.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Obter usuário pelo campo.",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Usuário não encontrado.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/active": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter todos os usuários ativos.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Listar usuários ativos no sistema.",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/inactive": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para obter todos os usuários inativos.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Listar usuários inativos no sistema.",
            "schema": {
              "$ref": "#/definitions/UserInactive"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/change-password": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para alterar a senha do usuário.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "password_change",
            "in": "body",
            "description": "Senha antiga e senha atual do usuário.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChangePassword"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alterar senha do usuário.",
            "schema": {
              "$ref": "#/definitions/ChangePasswordResponse"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/edit/{id}/role": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para alterar a role do usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "role",
            "in": "body",
            "description": "Role a ser fornecida ao usuário.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUserRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Alterar role do usuário.",
            "schema": {
              "$ref": "#/definitions/OK"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/edit/profile": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para editar o perfil do usuário.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "UpdateUser",
            "in": "body",
            "description": "Dados para atualização de usuário.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Alterar role do usuário.",
            "schema": {
              "$ref": "#/definitions/NoContent"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/{id}/activate": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para ativar o usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id do usuário."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário ativado.",
            "schema": {
              "$ref": "#/definitions/ActivateUserResponse"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/{id}/deactivate": {
      "patch": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para desativar o usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id do usuário."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Usuário desativado.",
            "schema": {
              "$ref": "#/definitions/DeactivatedUserResponse"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/{id}/edit": {
      "put": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para editar o perfil do usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Id do usuário."
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "UpdateUser",
            "in": "body",
            "description": "Dados para atualização de usuário.",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Alterar role do usuário.",
            "schema": {
              "$ref": "#/definitions/NoContent"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "delete": {
        "tags": [
          "User"
        ],
        "description": "Endpoint para deletar um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do usuário a ser removido.",
            "schema": {
              "$ref": "#/definitions/DeleteUser"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de acesso.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Remover um usuário.",
            "schema": {
              "$ref": "#/definitions/DeleteUserResponse"
            }
          },
          "400": {
            "description": "Requisição inválida.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Acesso não autorizado.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Acesso negado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/notes": {
      "get": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para listar todas as notas.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notas listadas com sucesso.",
            "schema": {
              "$ref": "#/definitions/NoteList"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para criar uma nova anotação.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "note",
            "in": "body",
            "description": "Informações da anotação.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteCreate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Anotação criada com sucesso.",
            "schema": {
              "$ref": "#/definitions/NoteCreated"
            }
          },
          "400": {
            "description": "Erro na requisição.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/notes/my-notes": {
      "get": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para listar todas as notas de um usuário autenticado.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notas listadas com sucesso.",
            "schema": {
              "$ref": "#/definitions/NoteList"
            }
          },
          "400": {
            "description": "Erro na requisição.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/notes/user/{id}": {
      "get": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para listar todas as notas de um usuário.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID do usuário.",
            "schema": {
              "$ref": "#/definitions/UserId"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notas listadas com sucesso.",
            "schema": {
              "$ref": "#/definitions/NoteList"
            }
          },
          "400": {
            "description": "Erro na requisição.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/notes/undated": {
      "get": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para listar todas as notas sem data de início e data de conclusão.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notas listadas com sucesso.",
            "schema": {
              "$ref": "#/definitions/NoteList"
            }
          },
          "400": {
            "description": "Erro na requisição.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/notes/pending": {
      "get": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para listar notas pendentes.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notas listadas com sucesso.",
            "schema": {
              "$ref": "#/definitions/NotePending"
            }
          },
          "400": {
            "description": "Erro na requisição.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/notes/completed": {
      "get": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para listar notas completadas.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notas listadas com sucesso.",
            "schema": {
              "$ref": "#/definitions/NoteCompleted"
            }
          },
          "400": {
            "description": "Erro na requisição.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/notes/overdue": {
      "get": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para listar notas atrasadas.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Notas listadas com sucesso.",
            "schema": {
              "$ref": "#/definitions/NoteOverdue"
            }
          },
          "400": {
            "description": "Erro na requisição.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/notes/{id}": {
      "get": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para listar uma nota específica.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID da nota.",
            "schema": {
              "$ref": "#/definitions/NoteId"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Nota listada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "400": {
            "description": "Erro na requisição.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para deletar uma anotação.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID da nota.",
            "schema": {
              "$ref": "#/definitions/NoteId"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Anotação deletada com sucesso.",
            "schema": {
              "$ref": "#/definitions/NoteDeleted"
            }
          },
          "400": {
            "description": "Erro na requisição.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/notes/search/request": {
      "get": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para listar uma nota específica.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "field",
            "in": "query",
            "description": "Campo de busca.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/NoteRequest"
            }
          },
          {
            "name": "value",
            "in": "query",
            "description": "Valor do campo de busca.",
            "required": false,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/NoteRequest"
            }
          },
          {
            "name": "page",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Nota listada com sucesso.",
            "schema": {
              "$ref": "#/definitions/Note"
            }
          },
          "400": {
            "description": "Campo de busca inválido.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    },
    "/notes/edit/{id}": {
      "put": {
        "tags": [
          "Note"
        ],
        "description": "Endpoint para editar uma anotação.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID da nota.",
            "schema": {
              "$ref": "#/definitions/NoteId"
            }
          },
          {
            "name": "authorization",
            "in": "header",
            "description": "Token de autenticação do usuário.",
            "required": true,
            "type": "string",
            "schema": {
              "$ref": "#/definitions/VerifyUser"
            }
          },
          {
            "name": "note",
            "in": "body",
            "description": "Informações da anotação.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NoteUpdate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Anotação editada com sucesso.",
            "schema": {
              "$ref": "#/definitions/NoteUpdated"
            }
          },
          "400": {
            "description": "Erro na requisição.",
            "schema": {
              "$ref": "#/definitions/BadRequest"
            }
          },
          "401": {
            "description": "Token inválido.",
            "schema": {
              "$ref": "#/definitions/Unauthorized"
            }
          },
          "403": {
            "description": "Usuário não autorizado.",
            "schema": {
              "$ref": "#/definitions/Forbidden"
            }
          },
          "404": {
            "description": "Nenhuma anotação encontrada.",
            "schema": {
              "$ref": "#/definitions/NotFound"
            }
          },
          "500": {
            "description": "Erro interno do servidor.",
            "schema": {
              "$ref": "#/definitions/InternalServerError"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Usuário listado com sucesso"
        },
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639407f89236de177775ac8f"
            },
            "name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "example": "john@doe.com"
            },
            "role": {
              "type": "string",
              "example": "user"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "profile_picture": {
              "type": "string",
              "example": "https://example.com/profile-picture.jpg"
            },
            "email_verified_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "lastLoginDate": {
              "type": "string",
              "example": "2022-11-01T00:00:00.000Z"
            },
            "currentLoginDate": {
              "type": "string",
              "example": "2022-12-12T00:00:00.000Z"
            },
            "created_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "example": "2022-11-12T00:00:00.000Z"
            }
          }
        }
      }
    },
    "UserId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "639407f89236de177775ac8f"
        }
      }
    },
    "UserList": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Usuários listados com sucesso"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "639407f89236de177775ac8f"
              },
              "name": {
                "type": "string",
                "example": "Mariah Doe"
              },
              "email": {
                "type": "string",
                "example": "mariah@doe.com"
              },
              "role": {
                "type": "string",
                "example": "user"
              },
              "status": {
                "type": "string",
                "example": "active"
              },
              "profile_picture": {
                "type": "string",
                "example": "https://example.com/profile-picture.jpg"
              },
              "email_verified_at": {
                "type": "string",
                "example": "2022-01-01T00:00:00.000Z"
              },
              "lastLoginDate": {
                "type": "string",
                "example": "2022-11-01T00:00:00.000Z"
              },
              "currentLoginDate": {
                "type": "string",
                "example": "2022-12-12T00:00:00.000Z"
              },
              "created_at": {
                "type": "string",
                "example": "2022-01-01T00:00:00.000Z"
              },
              "updated_at": {
                "type": "string",
                "example": "2022-11-12T00:00:00.000Z"
              }
            }
          }
        }
      }
    },
    "UserInactive": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Usuário inativado com sucesso"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "639407f89236de188886ac8f"
              },
              "name": {
                "type": "string",
                "example": "Jose Doe"
              },
              "email": {
                "type": "string",
                "example": "jose@doe.com"
              },
              "role": {
                "type": "string",
                "example": "user"
              },
              "status": {
                "type": "string",
                "example": "inactive"
              },
              "profile_picture": {
                "type": "string",
                "example": "https://example.com/profile-picture.jpg"
              },
              "email_verified_at": {
                "type": "string",
                "example": "2022-01-01T00:00:00.000Z"
              },
              "lastLoginDate": {
                "type": "string",
                "example": "2022-11-01T00:00:00.000Z"
              },
              "currentLoginDate": {
                "type": "string",
                "example": "2022-12-12T00:00:00.000Z"
              },
              "created_at": {
                "type": "string",
                "example": "2022-01-01T00:00:00.000Z"
              },
              "updated_at": {
                "type": "string",
                "example": "2022-11-12T00:00:00.000Z"
              }
            }
          }
        }
      }
    },
    "Note": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Nota listada com sucesso"
        },
        "note": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639271037445476efa30e136"
            },
            "title": {
              "type": "string",
              "example": "Note title"
            },
            "subject": {
              "type": "string",
              "example": "Note subject"
            },
            "content": {
              "type": "string",
              "example": "Note content"
            },
            "start_date": {
              "type": "string",
              "example": "2022-10-01T00:00:00.000Z"
            },
            "due_date": {
              "type": "string",
              "example": "2022-10-15T00:00:00.000Z"
            },
            "status": {
              "type": "string",
              "example": "completed"
            },
            "assignee": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "639407f89236de177775ac8f"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "email": {
                  "type": "string",
                  "example": "john@doe.com"
                },
                "profile_picture": {
                  "type": "string",
                  "example": "https://example.com/profile-picture.jpg"
                }
              }
            },
            "created_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "example": "2022-11-12T00:00:00.000Z"
            }
          }
        }
      }
    },
    "NoteList": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Notas listadas com sucesso"
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "example": "639271037445476efa30e136"
              },
              "title": {
                "type": "string",
                "example": "Note title"
              },
              "subject": {
                "type": "string",
                "example": "Note subject"
              },
              "content": {
                "type": "string",
                "example": "Note content"
              },
              "start_date": {
                "type": "string",
                "example": "2022-10-01T00:00:00.000Z"
              },
              "due_date": {
                "type": "string",
                "example": "2022-10-15T00:00:00.000Z"
              },
              "status": {
                "type": "string",
                "example": "pending"
              },
              "assignee": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "example": "639407f89236de177775ac8f"
                  },
                  "name": {
                    "type": "string",
                    "example": "John Doe 2"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@doe2.com"
                  },
                  "profile_picture": {
                    "type": "string",
                    "example": "https://example.com/profile-picture.jpg"
                  }
                }
              }
            }
          }
        }
      }
    },
    "NotePending": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Notas pendentes listadas com sucesso"
        },
        "note": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639271037445476efa30e136"
            },
            "title": {
              "type": "string",
              "example": "Note title"
            },
            "subject": {
              "type": "string",
              "example": "Note subject"
            },
            "content": {
              "type": "string",
              "example": "Note content"
            },
            "start_date": {
              "type": "string",
              "example": "2022-10-01T00:00:00.000Z"
            },
            "due_date": {
              "type": "string",
              "example": "2022-10-15T00:00:00.000Z"
            },
            "status": {
              "type": "string",
              "example": "pending"
            },
            "assignee": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "639407f89236de177775ac8f"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe 2"
                },
                "email": {
                  "type": "string",
                  "example": "john@doe2.com"
                },
                "profile_picture": {
                  "type": "string",
                  "example": "https://example.com/profile-picture.jpg"
                }
              }
            }
          }
        }
      }
    },
    "NoteCompleted": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Notas pendentes listadas com sucesso"
        },
        "note": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639271037445476efa30e136"
            },
            "title": {
              "type": "string",
              "example": "Note title"
            },
            "subject": {
              "type": "string",
              "example": "Note subject"
            },
            "content": {
              "type": "string",
              "example": "Note content"
            },
            "start_date": {
              "type": "string",
              "example": "2022-10-01T00:00:00.000Z"
            },
            "due_date": {
              "type": "string",
              "example": "2022-10-15T00:00:00.000Z"
            },
            "status": {
              "type": "string",
              "example": "completed"
            },
            "assignee": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "639407f89236de177775ac8f"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe 2"
                },
                "email": {
                  "type": "string",
                  "example": "john@doe2.com"
                },
                "profile_picture": {
                  "type": "string",
                  "example": "https://example.com/profile-picture.jpg"
                }
              }
            }
          }
        }
      }
    },
    "NoteOverdue": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Notas pendentes listadas com sucesso"
        },
        "note": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639271037445476efa30e136"
            },
            "title": {
              "type": "string",
              "example": "Note title"
            },
            "subject": {
              "type": "string",
              "example": "Note subject"
            },
            "content": {
              "type": "string",
              "example": "Note content"
            },
            "start_date": {
              "type": "string",
              "example": "2022-10-01T00:00:00.000Z"
            },
            "due_date": {
              "type": "string",
              "example": "2022-10-15T00:00:00.000Z"
            },
            "status": {
              "type": "string",
              "example": "overdue"
            },
            "assignee": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "639407f89236de177775ac8f"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe 2"
                },
                "email": {
                  "type": "string",
                  "example": "john@doe2.com"
                },
                "profile_picture": {
                  "type": "string",
                  "example": "https://example.com/profile-picture.jpg"
                }
              }
            }
          }
        }
      }
    },
    "NoteCreate": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Note title"
        },
        "subject": {
          "type": "string",
          "example": "Note subject"
        },
        "content": {
          "type": "string",
          "example": "Note content"
        },
        "start_date": {
          "type": "string",
          "example": "2022-10-01T00:00:00.000Z"
        },
        "due_date": {
          "type": "string",
          "example": "2022-10-15T00:00:00.000Z"
        }
      }
    },
    "NoteCreated": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 201
        },
        "message": {
          "type": "string",
          "example": "Nota criada com sucesso"
        },
        "note": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639271037445476efa30e136"
            },
            "title": {
              "type": "string",
              "example": "Note title"
            },
            "subject": {
              "type": "string",
              "example": "Note subject"
            },
            "content": {
              "type": "string",
              "example": "Note content"
            },
            "start_date": {
              "type": "string",
              "example": "2022-10-01T00:00:00.000Z"
            },
            "due_date": {
              "type": "string",
              "example": "2022-10-15T00:00:00.000Z"
            },
            "status": {
              "type": "string",
              "example": "overdue"
            },
            "assignee": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "639407f89236de177775ac8f"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe 2"
                },
                "email": {
                  "type": "string",
                  "example": "john@doe2.com"
                },
                "profile_picture": {
                  "type": "string",
                  "example": "https://example.com/profile-picture.jpg"
                }
              }
            }
          }
        }
      }
    },
    "NoteUpdate": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "example": "Note title"
        },
        "subject": {
          "type": "string",
          "example": "Note subject"
        },
        "content": {
          "type": "string",
          "example": "Note content"
        },
        "start_date": {
          "type": "string",
          "example": "2022-10-01T00:00:00.000Z"
        },
        "due_date": {
          "type": "string",
          "example": "2022-10-15T00:00:00.000Z"
        }
      }
    },
    "NoteId": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "639271037445476efa30e136"
        }
      }
    },
    "NoteRequest": {
      "type": "object",
      "properties": {
        "field": {
          "type": "string",
          "example": "title"
        },
        "value": {
          "type": "string",
          "example": "Note title"
        }
      }
    },
    "NoteUpdated": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Nota atualizada com sucesso"
        },
        "note": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639271037445476efa30e136"
            },
            "title": {
              "type": "string",
              "example": "Note title"
            },
            "subject": {
              "type": "string",
              "example": "Note subject"
            },
            "content": {
              "type": "string",
              "example": "Note content"
            },
            "start_date": {
              "type": "string",
              "example": "2022-10-01T00:00:00.000Z"
            },
            "due_date": {
              "type": "string",
              "example": "2022-10-15T00:00:00.000Z"
            },
            "status": {
              "type": "string",
              "example": "overdue"
            },
            "assignee": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "639407f89236de177775ac8f"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe 2"
                },
                "email": {
                  "type": "string",
                  "example": "john@doe2.com"
                },
                "profile_picture": {
                  "type": "string",
                  "example": "https://example.com/profile-picture.jpg"
                }
              }
            }
          }
        }
      }
    },
    "NoteDeleted": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Anotação removida com sucesso por ..."
        },
        "deletedNote": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639271037445476efa30e136"
            },
            "title": {
              "type": "string",
              "example": "Note title"
            },
            "subject": {
              "type": "string",
              "example": "Note subject"
            },
            "content": {
              "type": "string",
              "example": "Note content"
            },
            "start_date": {
              "type": "string",
              "example": "2022-10-01T00:00:00.000Z"
            },
            "due_date": {
              "type": "string",
              "example": "2022-10-15T00:00:00.000Z"
            },
            "status": {
              "type": "string",
              "example": "overdue"
            },
            "assignee": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "639407f89236de177775ac8f"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe 2"
                },
                "email": {
                  "type": "string",
                  "example": "john@doe2.com"
                },
                "status": {
                  "type": "string",
                  "example": "active"
                },
                "profile_picture": {
                  "type": "string",
                  "example": "https://example.com/profile-picture.jpg"
                }
              }
            }
          }
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 201
        },
        "message": {
          "type": "string",
          "example": "Usuário criado com sucesso!"
        },
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639407f89236de177775ac8f"
            },
            "name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "example": "john@doe.com"
            },
            "password": {
              "type": "string",
              "example": "123456789"
            },
            "role": {
              "type": "string",
              "example": "user"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "profile_picture": {
              "type": "string",
              "example": "https://example.com/profile-picture.jpg"
            },
            "email_verified_at": {},
            "created_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "example": "2022-11-12T00:00:00.000Z"
            }
          }
        },
        "access_token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOTQwN2Y4OTIzNmRlMTc3Nzc1YWM4ZiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTY3MDg4MDMwMSwiZXhwIjoxNjcwOTY2NzAxfQ.FgfcaI6-LIF240aJeryZdOLvTHdRDNIBsK2HjhF7nLOFbS51rkmehmcH3Lf7gwTBUu2_xx1P6S62GUWchArPpA"
        }
      }
    },
    "newUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "123456789"
        }
      }
    },
    "OK": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Requisição realizada com sucesso!"
        }
      }
    },
    "Created": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 201
        },
        "message": {
          "type": "string",
          "example": "Recurso criado com sucesso!"
        }
      }
    },
    "NoContent": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 204
        },
        "message": {
          "type": "string",
          "example": "Recurso atualizado com sucesso!"
        }
      }
    },
    "NoContentR": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 204
        },
        "message": {
          "type": "string",
          "example": "Recurso removido com sucesso!"
        }
      }
    },
    "BadRequest": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 400
        },
        "message": {
          "type": "string",
          "example": "Requisição inválida!"
        }
      }
    },
    "Unauthorized": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 401
        },
        "message": {
          "type": "string",
          "example": "Acesso negado. Você não está autenticado!"
        }
      }
    },
    "Forbidden": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 403
        },
        "message": {
          "type": "string",
          "example": "Acesso negado. Você não tem permissão para acessar este recurso!"
        }
      }
    },
    "NotFound": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 404
        },
        "message": {
          "type": "string",
          "example": "Recurso não encontrado!"
        }
      }
    },
    "Conflict": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 409
        },
        "message": {
          "type": "string",
          "example": "Já existe um usuário com este e-mail!"
        }
      }
    },
    "InternalServerError": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": false
        },
        "statusCode": {
          "type": "number",
          "example": 500
        },
        "message": {
          "type": "string",
          "example": "Erro interno do servidor!"
        }
      }
    },
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "UserLoginResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Usuário logado com sucesso!"
        },
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639407f89236de177775ac8f"
            },
            "name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "example": "john@doe.com"
            },
            "role": {
              "type": "string",
              "example": "user"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "profile_picture": {
              "type": "string",
              "example": "https://example.com/profile-picture.jpg"
            },
            "email_verified_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "created_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "example": "2022-11-12T00:00:00.000Z"
            }
          }
        },
        "access_token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOTQwN2Y4OTIzNmRlMTc3Nzc1YWM4ZiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTY3MDg4MDMwMSwiZXhwIjoxNjcwOTY2NzAxfQ.FgfcaI6-LIF240aJeryZdOLvTHdRDNIBsK2HjhF7nLOFbS51rkmehmcH3Lf7gwTBUu2_xx1P6S62GUWchArPpA"
        },
        "refresh_token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOTQwN2Y4OTIzNmRlMTc3Nzc1YWM4ZiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTY3MDg4MDMwMSwiZXhwIjoxNjcwOTY2NzAxfQ.xi8Hy6d6IXWKdVdsMH7iU32bEK5jHqOvqMG-ofsD6VcFcHUK49XJJ-NJpOTpfdjomwWebL_GWczdB21segdQnw"
        }
      }
    },
    "RefreshToken": {
      "type": "object",
      "properties": {
        "Authorization": {
          "type": "string",
          "example": "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOTQwN2Y4OTIzNmRlMTc3Nzc1YWM4ZiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTY3MDg4MDMwMSwiZXhwIjoxNjcwOTY2NzAxfQ.xi8Hy6d6IXWKdVdsMH7iU32bEK5jHqOvqMG-ofsD6VcFcHUK49XJJ-NJpOTpfdjomwWebL_GWczdB21segdQnw"
        }
      }
    },
    "RefreshTokenResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Token de acesso atualizado com sucesso"
        },
        "access_token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOTQwN2Y4OTIzNmRlMTc3Nzc1YWM4ZiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTY3MDg4MDMwMSwiZXhwIjoxNjcwOTY2NzAxfQ.xi8Hy6d6IXWKdVdsMH7iU32bEK5jHqOvqMG-ofsD6VcFcHUK49XJJ-NJpOTpfdjomwWebL_GWczdB21segdQnw"
        }
      }
    },
    "VerifyUser": {
      "type": "object",
      "properties": {
        "Authorization": {
          "type": "string",
          "example": "Bearer eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYzOTQwN2Y4OTIzNmRlMTc3Nzc1YWM4ZiIsInJvbGUiOiJhZG1pbiIsImlhdCI6MTY3MDg4MDMwMSwiZXhwIjoxNjcwOTY2NzAxfQ.xi8Hy6d6IXWKdVdsMH7iU32bEK5jHqOvqMG-ofsD6VcFcHUK49XJJ-NJpOTpfdjomwWebL_GWczdB21segdQnw"
        }
      }
    },
    "VerifyUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Usuário autenticado com sucesso!"
        },
        "user": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639407f89236de177775ac8f"
            },
            "name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "example": "john@doe.com"
            },
            "role": {
              "type": "string",
              "example": "user"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "profile_picture": {
              "type": "string",
              "example": "https://example.com/profile-picture.jpg"
            },
            "email_verified_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "lastLoginDate": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "currentLoginDate": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "created_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "example": "2022-11-12T00:00:00.000Z"
            }
          }
        }
      }
    },
    "ChangePassword": {
      "type": "object",
      "properties": {
        "oldPassword": {
          "type": "string",
          "example": "123456789"
        },
        "newPassword": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "ChangePasswordResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Senha atualizada com sucesso!"
        }
      }
    },
    "ActivateUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Usuário ativado com sucesso!"
        }
      }
    },
    "DeactivatedUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Usuário desativado com sucesso!"
        }
      }
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "John Doe"
        },
        "email": {
          "type": "string",
          "example": "john@doe.com"
        },
        "profile_picture": {
          "type": "string",
          "example": "https://i.ibb.co/z5FrMR2/5e7599f65f27.png"
        }
      }
    },
    "UpdateUserRole": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "example": "user"
        }
      }
    },
    "DeleteUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "639407f89236de177775ac8f"
        }
      }
    },
    "DeleteUserResponse": {
      "type": "object",
      "properties": {
        "success": {
          "type": "boolean",
          "example": true
        },
        "statusCode": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string",
          "example": "Usuário removido com sucesso!"
        },
        "deletedUser": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "example": "639407f89236de177775ac8f"
            },
            "name": {
              "type": "string",
              "example": "John Doe"
            },
            "email": {
              "type": "string",
              "example": "john@doe.com"
            },
            "role": {
              "type": "string",
              "example": "user"
            },
            "status": {
              "type": "string",
              "example": "active"
            },
            "profile_picture": {
              "type": "string",
              "example": "https://example.com/profile-picture.jpg"
            },
            "email_verified_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "lastLoginDate": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "currentLoginDate": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "created_at": {
              "type": "string",
              "example": "2022-01-01T00:00:00.000Z"
            },
            "updated_at": {
              "type": "string",
              "example": "2022-11-12T00:00:00.000Z"
            }
          }
        }
      }
    }
  }
}